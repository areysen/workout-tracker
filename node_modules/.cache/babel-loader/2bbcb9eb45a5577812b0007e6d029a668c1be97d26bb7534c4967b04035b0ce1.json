{"ast":null,"code":"var _jsxFileName = \"/Users/areysen/workout-tracker/src/WorkoutLog.js\",\n  _s = $RefreshSig$();\n// WorkoutLog.js with Searchable History View & All Features\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WorkoutLog() {\n  _s();\n  const rpeScale = [{\n    value: \"1\",\n    description: \"Very light, warm-up only\"\n  }, {\n    value: \"2\",\n    description: \"Light effort\"\n  }, {\n    value: \"3\",\n    description: \"Still easy, barely working\"\n  }, {\n    value: \"4\",\n    description: \"Moderate, could do 6+ more reps\"\n  }, {\n    value: \"5\",\n    description: \"Challenging but still easy\"\n  }, {\n    value: \"6\",\n    description: \"Moderate effort, 4-5 reps left\"\n  }, {\n    value: \"7\",\n    description: \"Hard, 3 reps left\"\n  }, {\n    value: \"8\",\n    description: \"Very hard, 2 reps left\"\n  }, {\n    value: \"9\",\n    description: \"Max effort, 1 rep left\"\n  }, {\n    value: \"10\",\n    description: \"All out, couldn't do another rep\"\n  }];\n  const getRecommendedRest = exerciseName => {\n    const compounds = [\"Squat\", \"Deadlift\", \"Press\", \"Row\", \"Pull-Up\", \"Bench\"];\n    return compounds.some(c => exerciseName.includes(c)) ? \"60–120s\" : \"30–60s\";\n  };\n  const getSmartSuggestion = exercise => {\n    if (!exercise.prevWeight || !exercise.rpe) return null;\n    const prev = parseFloat(exercise.prevWeight);\n    const rpe = parseInt(exercise.rpe);\n    if (!prev || !rpe || rpe >= 9) return null;\n    const increment = rpe <= 6 ? 5 : 2.5;\n    return `${(prev + increment).toFixed(1)} lbs`;\n  };\n  const getPreviousBest = exercise => {\n    if (!exercise.prevWeight || !exercise.sets || !exercise.reps || !exercise.rpe) return null;\n    return `${exercise.prevWeight} lbs × ${exercise.reps} (RPE ${exercise.rpe})`;\n  };\n  const defaultLog = [{\n    day: \"Monday\",\n    muscleGroup: \"Chest, Shoulders, Triceps + Cardio\",\n    warmups: [\"Arm Circles\", \"Band Pull-Aparts\"],\n    exercises: [{\n      name: \"Incline Dumbbell Press\",\n      sets: \"4\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Flat Bench Press or Machine Press\",\n      sets: \"3\",\n      reps: \"8\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Seated DB Shoulder Press\",\n      sets: \"3\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Lateral Raises\",\n      sets: \"3\",\n      reps: \"15\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Tricep Dips or Cable Pushdowns\",\n      sets: \"4\",\n      reps: \"12\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"15 min Incline Walk or Light Cycle\",\n      sets: \"1\",\n      reps: \"15 min\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Cardio finisher\",\n      done: false\n    }]\n  }, {\n    day: \"Tuesday\",\n    muscleGroup: \"Legs & Core + HIIT\",\n    warmups: [\"Bodyweight Squats\", \"Hip Bridges\"],\n    exercises: [{\n      name: \"Barbell Back Squat or Leg Press\",\n      sets: \"4\",\n      reps: \"8\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Romanian Deadlifts\",\n      sets: \"3\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Walking Lunges\",\n      sets: \"3\",\n      reps: \"12\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Calf Raises\",\n      sets: \"3\",\n      reps: \"15\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Cable Crunches\",\n      sets: \"3\",\n      reps: \"15\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Weighted core\",\n      done: false\n    }, {\n      name: \"Sprints (30s) + Rest (90s)\",\n      sets: \"4\",\n      reps: \"30s sprint\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"90s\",\n      notes: \"HIIT finisher\",\n      done: false\n    }]\n  }, {\n    day: \"Wednesday\",\n    muscleGroup: \"Back & Biceps + Cardio Row\",\n    warmups: [\"Band Pulls\", \"Dynamic Arm Swings\"],\n    exercises: [{\n      name: \"Barbell or Cable Row\",\n      sets: \"4\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Lat Pulldown or Pull-Ups\",\n      sets: \"3\",\n      reps: \"8\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Face Pulls\",\n      sets: \"3\",\n      reps: \"15\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Shoulder health\",\n      done: false\n    }, {\n      name: \"Barbell or Dumbbell Curls\",\n      sets: \"3\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Hammer Curls\",\n      sets: \"3\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Forearms\",\n      done: false\n    }, {\n      name: \"Rower (steady or intervals)\",\n      sets: \"1\",\n      reps: \"10–15 min\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Cardio finisher\",\n      done: false\n    }]\n  }, {\n    day: \"Thursday\",\n    muscleGroup: \"Glutes, Hamstrings, Core + Conditioning\",\n    warmups: [\"Glute Bridges\", \"Leg Swings\"],\n    exercises: [{\n      name: \"Hip Thrusts\",\n      sets: \"4\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Bulgarian Split Squats\",\n      sets: \"3\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Hamstring Curls\",\n      sets: \"3\",\n      reps: \"12\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Glute Kickbacks\",\n      sets: \"3\",\n      reps: \"15\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"\",\n      done: false\n    }, {\n      name: \"Hanging Leg Raises\",\n      sets: \"3\",\n      reps: \"12\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Core stability\",\n      done: false\n    }, {\n      name: \"Sled Push or Battle Ropes\",\n      sets: \"6\",\n      reps: \"20s\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Conditioning\",\n      done: false\n    }]\n  }, {\n    day: \"Friday\",\n    muscleGroup: \"Full Body Metcon / HIIT\",\n    warmups: [\"Jump Rope\", \"Mobility Flow\"],\n    exercises: [{\n      name: \"Box Jumps\",\n      sets: \"3\",\n      reps: \"10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Explosiveness\",\n      done: false\n    }, {\n      name: \"Kettlebell Swings\",\n      sets: \"3\",\n      reps: \"20\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Glutes + cardio\",\n      done: false\n    }, {\n      name: \"Push-ups or DB Bench\",\n      sets: \"3\",\n      reps: \"12\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Upper body\",\n      done: false\n    }, {\n      name: \"Goblet Squats\",\n      sets: \"3\",\n      reps: \"15\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Quads + core\",\n      done: false\n    }, {\n      name: \"Russian Twists\",\n      sets: \"3\",\n      reps: \"20\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Obliques\",\n      done: false\n    }, {\n      name: \"AMRAP 10 min: burpees, wall balls, jump rope\",\n      sets: \"AMRAP\",\n      reps: \"10/10/10\",\n      weight: \"\",\n      prevWeight: \"\",\n      rpe: \"\",\n      rest: \"\",\n      notes: \"Finisher circuit\",\n      done: false\n    }]\n  }];\n  const [log, setLog] = useState(() => {\n    const saved = localStorage.getItem(\"workoutLog\");\n    return saved ? JSON.parse(saved) : defaultLog;\n  });\n  const [history, setHistory] = useState(() => {\n    const saved = localStorage.getItem(\"workoutHistory\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const filteredHistory = history.filter(entry => {\n    const term = searchTerm.toLowerCase();\n    return entry.day.toLowerCase().includes(term) || entry.muscleGroup.toLowerCase().includes(term) || entry.exercises.some(ex => ex.name.toLowerCase().includes(term) || ex.notes && ex.notes.toLowerCase().includes(term));\n  });\n  const [completedWarmups, setCompletedWarmups] = useState({});\n  const [showRPE, setShowRPE] = useState(false);\n  const todayIndex = new Date().getDay() - 1;\n  const [activeTab, setActiveTab] = useState(todayIndex >= 0 && todayIndex <= 4 ? todayIndex : 0);\n  const tabRefs = useRef([]);\n  useEffect(() => {\n    localStorage.setItem(\"workoutLog\", JSON.stringify(log));\n  }, [log]);\n  useEffect(() => {\n    localStorage.setItem(\"workoutHistory\", JSON.stringify(history));\n  }, [history]);\n  useEffect(() => {\n    if (tabRefs.current[activeTab]) {\n      tabRefs.current[activeTab].scrollIntoView({\n        behavior: 'smooth',\n        inline: 'center',\n        block: 'nearest'\n      });\n    }\n  }, [activeTab]);\n  const handleChange = (dayIndex, exerciseIndex, field, value) => {\n    const updatedLog = [...log];\n    updatedLog[dayIndex].exercises[exerciseIndex][field] = value;\n    setLog(updatedLog);\n  };\n  const toggleWarmup = (dayIndex, warmup) => {\n    const key = `${dayIndex}-${warmup}`;\n    setCompletedWarmups(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  const toggleExerciseDone = (dayIndex, exerciseIndex) => {\n    const updatedLog = [...log];\n    updatedLog[dayIndex].exercises[exerciseIndex].done = !updatedLog[dayIndex].exercises[exerciseIndex].done;\n    setLog(updatedLog);\n  };\n  const finishDay = dayIndex => {\n    const updatedLog = [...log];\n    const today = new Date().toLocaleDateString();\n    const finished = {\n      date: today,\n      day: log[dayIndex].day,\n      muscleGroup: log[dayIndex].muscleGroup,\n      exercises: log[dayIndex].exercises.map(ex => ({\n        name: ex.name,\n        weight: ex.weight,\n        reps: ex.reps,\n        sets: ex.sets,\n        rpe: ex.rpe,\n        notes: ex.notes\n      }))\n    };\n    setHistory(prev => [...prev, finished]);\n    updatedLog[dayIndex].exercises.forEach(ex => {\n      if (ex.weight) ex.prevWeight = ex.weight;\n      ex.weight = \"\";\n      ex.rpe = \"\";\n      ex.rest = \"\";\n      ex.notes = \"\";\n      ex.done = false;\n    });\n    setLog(updatedLog);\n  };\n  const exportLog = () => {\n    const blob = new Blob([JSON.stringify(log, null, 2)], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = `workout-log-${new Date().toISOString().split(\"T\")[0]}.json`;\n    link.click();\n  };\n  const tabs = [...log.map(d => d.day), \"History\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen w-full bg-[#242B2F] text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 space-y-6 max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-white\",\n          children: \"Workout Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportLog,\n          className: \"border border-white text-white px-3 py-1 rounded text-sm bg-transparent hover:bg-white/10\",\n          children: \"Export Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-[#343E44] p-4 rounded-md ${showRPE ? \"\" : \"pb-2\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowRPE(!showRPE),\n          className: \"text-left w-full text-lg font-semibold flex justify-between items-center text-white\",\n          children: [\"RPE Scale (Rate of Perceived Exertion)\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: showRPE ? \"▲\" : \"▼\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), showRPE && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-sm space-y-1 mt-2 text-gray-300\",\n          children: rpeScale.map(rpe => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: rpe.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this), \": \", rpe.description]\n          }, rpe.value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2 overflow-x-auto border-b pb-2 border-gray-700\",\n        children: tabs.map((tab, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: el => tabRefs.current[index] = el,\n          onClick: () => setActiveTab(index),\n          className: `px-4 py-2 rounded-t-md text-base whitespace-nowrap ${activeTab === index ? \"bg-[#C63663] text-white\" : \"bg-gray-700 text-gray-300\"}`,\n          children: tab\n        }, tab, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), activeTab === tabs.length - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#343E44] p-4 rounded-xl shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-white\",\n          children: \"Workout History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border rounded p-2 w-full mb-4 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\",\n          placeholder: \"Search history by day, muscle group, exercise, or note...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), filteredHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"No matching workouts found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 15\n        }, this) : filteredHistory.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-[#C63663]\",\n            children: [entry.date, \" \\u2013 \", entry.day, \" (\", entry.muscleGroup, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm ml-4 mt-1 list-disc text-gray-300\",\n            children: entry.exercises.map((ex, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-white\",\n                children: ex.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 25\n              }, this), \": \", ex.sets, \"x\", ex.reps, \" @ \", ex.weight, \" lbs (RPE \", ex.rpe, \") \", ex.notes && `– ${ex.notes}`]\n            }, j, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this) : null, log.map((day, dayIndex) => activeTab === dayIndex && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#343E44] p-4 rounded-xl shadow-md space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-white\",\n          children: [day.day, \" \\u2013 \", day.muscleGroup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-md font-medium text-gray-300\",\n            children: \"Warmups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 19\n          }, this), day.warmups.map((warmup, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 text-sm text-gray-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"accent-[#C63663]\",\n              checked: completedWarmups[`${dayIndex}-${warmup}`] || false,\n              onChange: () => toggleWarmup(dayIndex, warmup)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 23\n            }, this), warmup]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-md font-medium text-gray-300 mt-4\",\n            children: \"Main Exercises\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 19\n          }, this), day.exercises.map((exercise, exerciseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 border border-[#818C91] rounded-md space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col sm:flex-row sm:items-center sm:gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center gap-2 text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: exercise.done || false,\n                  onChange: () => toggleExerciseDone(dayIndex, exerciseIndex)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-400\",\n                children: [\"Recommended: \", exercise.sets, \" x \", exercise.reps]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 25\n              }, this), exercise.prevWeight && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-400\",\n                children: [\"Previous Weight: \", exercise.prevWeight, \" lbs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 23\n            }, this), getPreviousBest(exercise) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-purple-400 font-medium\",\n              children: [\"\\uD83D\\uDCAA Previous Best: \", getPreviousBest(exercise)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 sm:grid-cols-6 gap-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\",\n                placeholder: \"Sets\",\n                value: exercise.sets,\n                onChange: e => handleChange(dayIndex, exerciseIndex, \"sets\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\",\n                placeholder: \"Reps\",\n                value: exercise.reps,\n                onChange: e => handleChange(dayIndex, exerciseIndex, \"reps\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\",\n                placeholder: \"Weight\",\n                value: exercise.weight,\n                onChange: e => handleChange(dayIndex, exerciseIndex, \"weight\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white\",\n                value: exercise.rpe || \"\",\n                onChange: e => handleChange(dayIndex, exerciseIndex, \"rpe\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"RPE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 27\n                }, this), rpeScale.map(rpe => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: rpe.value,\n                  children: rpe.value\n                }, rpe.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 29\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\",\n                  placeholder: \"Rest (sec)\",\n                  value: exercise.rest,\n                  onChange: e => handleChange(dayIndex, exerciseIndex, \"rest\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-400 mt-1\",\n                  children: [\"Recommended: \", getRecommendedRest(exercise.name)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\",\n                placeholder: \"Notes\",\n                value: exercise.notes,\n                onChange: e => handleChange(dayIndex, exerciseIndex, \"notes\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 23\n            }, this), getSmartSuggestion(exercise) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-green-400 pt-1\",\n              children: [\"\\uD83D\\uDCA1 Suggestion: \", getSmartSuggestion(exercise)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 25\n            }, this)]\n          }, exercise.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => finishDay(dayIndex),\n            className: \"text-sm bg-[#C63663] hover:bg-[#b03056] text-white px-3 py-1 rounded\",\n            children: \"Finish Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 17\n        }, this)]\n      }, day.day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 504,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkoutLog, \"x+B0wF/5t+C27MJLOJ6JapfL6eg=\");\n_c = WorkoutLog;\nvar _c;\n$RefreshReg$(_c, \"WorkoutLog\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","WorkoutLog","_s","rpeScale","value","description","getRecommendedRest","exerciseName","compounds","some","c","includes","getSmartSuggestion","exercise","prevWeight","rpe","prev","parseFloat","parseInt","increment","toFixed","getPreviousBest","sets","reps","defaultLog","day","muscleGroup","warmups","exercises","name","weight","rest","notes","done","log","setLog","saved","localStorage","getItem","JSON","parse","history","setHistory","searchTerm","setSearchTerm","filteredHistory","filter","entry","term","toLowerCase","ex","completedWarmups","setCompletedWarmups","showRPE","setShowRPE","todayIndex","Date","getDay","activeTab","setActiveTab","tabRefs","setItem","stringify","current","scrollIntoView","behavior","inline","block","handleChange","dayIndex","exerciseIndex","field","updatedLog","toggleWarmup","warmup","key","toggleExerciseDone","finishDay","today","toLocaleDateString","finished","date","map","forEach","exportLog","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","toISOString","split","click","tabs","d","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","tab","index","ref","el","length","placeholder","onChange","e","target","i","j","checked","_c","$RefreshReg$"],"sources":["/Users/areysen/workout-tracker/src/WorkoutLog.js"],"sourcesContent":["// WorkoutLog.js with Searchable History View & All Features\nimport React, { useState, useEffect, useRef } from \"react\";\n\nexport default function WorkoutLog() {\n  const rpeScale = [\n    { value: \"1\", description: \"Very light, warm-up only\" },\n    { value: \"2\", description: \"Light effort\" },\n    { value: \"3\", description: \"Still easy, barely working\" },\n    { value: \"4\", description: \"Moderate, could do 6+ more reps\" },\n    { value: \"5\", description: \"Challenging but still easy\" },\n    { value: \"6\", description: \"Moderate effort, 4-5 reps left\" },\n    { value: \"7\", description: \"Hard, 3 reps left\" },\n    { value: \"8\", description: \"Very hard, 2 reps left\" },\n    { value: \"9\", description: \"Max effort, 1 rep left\" },\n    { value: \"10\", description: \"All out, couldn't do another rep\" }\n  ];\n\n  const getRecommendedRest = (exerciseName) => {\n    const compounds = [\"Squat\", \"Deadlift\", \"Press\", \"Row\", \"Pull-Up\", \"Bench\"];\n    return compounds.some((c) => exerciseName.includes(c)) ? \"60–120s\" : \"30–60s\";\n  };\n\n  const getSmartSuggestion = (exercise) => {\n    if (!exercise.prevWeight || !exercise.rpe) return null;\n    const prev = parseFloat(exercise.prevWeight);\n    const rpe = parseInt(exercise.rpe);\n    if (!prev || !rpe || rpe >= 9) return null;\n    const increment = rpe <= 6 ? 5 : 2.5;\n    return `${(prev + increment).toFixed(1)} lbs`;\n  };\n\n  const getPreviousBest = (exercise) => {\n    if (!exercise.prevWeight || !exercise.sets || !exercise.reps || !exercise.rpe) return null;\n    return `${exercise.prevWeight} lbs × ${exercise.reps} (RPE ${exercise.rpe})`;\n  };\n\n  const defaultLog = [\n    {\n      day: \"Monday\",\n      muscleGroup: \"Chest, Shoulders, Triceps + Cardio\",\n      warmups: [\"Arm Circles\", \"Band Pull-Aparts\"],\n      exercises: [\n        {\n          name: \"Incline Dumbbell Press\",\n          sets: \"4\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Flat Bench Press or Machine Press\",\n          sets: \"3\",\n          reps: \"8\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Seated DB Shoulder Press\",\n          sets: \"3\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Lateral Raises\",\n          sets: \"3\",\n          reps: \"15\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Tricep Dips or Cable Pushdowns\",\n          sets: \"4\",\n          reps: \"12\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"15 min Incline Walk or Light Cycle\",\n          sets: \"1\",\n          reps: \"15 min\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Cardio finisher\",\n          done: false\n        }\n      ]\n    },\n    {\n      day: \"Tuesday\",\n      muscleGroup: \"Legs & Core + HIIT\",\n      warmups: [\"Bodyweight Squats\", \"Hip Bridges\"],\n      exercises: [\n        {\n          name: \"Barbell Back Squat or Leg Press\",\n          sets: \"4\",\n          reps: \"8\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Romanian Deadlifts\",\n          sets: \"3\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Walking Lunges\",\n          sets: \"3\",\n          reps: \"12\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Calf Raises\",\n          sets: \"3\",\n          reps: \"15\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Cable Crunches\",\n          sets: \"3\",\n          reps: \"15\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Weighted core\",\n          done: false\n        },\n        {\n          name: \"Sprints (30s) + Rest (90s)\",\n          sets: \"4\",\n          reps: \"30s sprint\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"90s\",\n          notes: \"HIIT finisher\",\n          done: false\n        }\n      ]\n    },\n    {\n      day: \"Wednesday\",\n      muscleGroup: \"Back & Biceps + Cardio Row\",\n      warmups: [\"Band Pulls\", \"Dynamic Arm Swings\"],\n      exercises: [\n        {\n          name: \"Barbell or Cable Row\",\n          sets: \"4\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Lat Pulldown or Pull-Ups\",\n          sets: \"3\",\n          reps: \"8\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Face Pulls\",\n          sets: \"3\",\n          reps: \"15\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Shoulder health\",\n          done: false\n        },\n        {\n          name: \"Barbell or Dumbbell Curls\",\n          sets: \"3\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Hammer Curls\",\n          sets: \"3\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Forearms\",\n          done: false\n        },\n        {\n          name: \"Rower (steady or intervals)\",\n          sets: \"1\",\n          reps: \"10–15 min\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Cardio finisher\",\n          done: false\n        }\n      ]\n    },\n    {\n      day: \"Thursday\",\n      muscleGroup: \"Glutes, Hamstrings, Core + Conditioning\",\n      warmups: [\"Glute Bridges\", \"Leg Swings\"],\n      exercises: [\n        {\n          name: \"Hip Thrusts\",\n          sets: \"4\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Bulgarian Split Squats\",\n          sets: \"3\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Hamstring Curls\",\n          sets: \"3\",\n          reps: \"12\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Glute Kickbacks\",\n          sets: \"3\",\n          reps: \"15\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"\",\n          done: false\n        },\n        {\n          name: \"Hanging Leg Raises\",\n          sets: \"3\",\n          reps: \"12\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Core stability\",\n          done: false\n        },\n        {\n          name: \"Sled Push or Battle Ropes\",\n          sets: \"6\",\n          reps: \"20s\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Conditioning\",\n          done: false\n        }\n      ]\n    },\n    {\n      day: \"Friday\",\n      muscleGroup: \"Full Body Metcon / HIIT\",\n      warmups: [\"Jump Rope\", \"Mobility Flow\"],\n      exercises: [\n        {\n          name: \"Box Jumps\",\n          sets: \"3\",\n          reps: \"10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Explosiveness\",\n          done: false\n        },\n        {\n          name: \"Kettlebell Swings\",\n          sets: \"3\",\n          reps: \"20\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Glutes + cardio\",\n          done: false\n        },\n        {\n          name: \"Push-ups or DB Bench\",\n          sets: \"3\",\n          reps: \"12\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Upper body\",\n          done: false\n        },\n        {\n          name: \"Goblet Squats\",\n          sets: \"3\",\n          reps: \"15\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Quads + core\",\n          done: false\n        },\n        {\n          name: \"Russian Twists\",\n          sets: \"3\",\n          reps: \"20\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Obliques\",\n          done: false\n        },\n        {\n          name: \"AMRAP 10 min: burpees, wall balls, jump rope\",\n          sets: \"AMRAP\",\n          reps: \"10/10/10\",\n          weight: \"\",\n          prevWeight: \"\",\n          rpe: \"\",\n          rest: \"\",\n          notes: \"Finisher circuit\",\n          done: false\n        }\n      ]\n    }\n  ];\n\n  const [log, setLog] = useState(() => {\n    const saved = localStorage.getItem(\"workoutLog\");\n    return saved ? JSON.parse(saved) : defaultLog;\n  });\n\n  const [history, setHistory] = useState(() => {\n    const saved = localStorage.getItem(\"workoutHistory\");\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const filteredHistory = history.filter((entry) => {\n    const term = searchTerm.toLowerCase();\n    return (\n      entry.day.toLowerCase().includes(term) ||\n      entry.muscleGroup.toLowerCase().includes(term) ||\n      entry.exercises.some(\n        (ex) => ex.name.toLowerCase().includes(term) || (ex.notes && ex.notes.toLowerCase().includes(term))\n      )\n    );\n  });\n\n  const [completedWarmups, setCompletedWarmups] = useState({});\n  const [showRPE, setShowRPE] = useState(false);\n  const todayIndex = new Date().getDay() - 1;\n  const [activeTab, setActiveTab] = useState(todayIndex >= 0 && todayIndex <= 4 ? todayIndex : 0);\n  const tabRefs = useRef([]);\n\n  useEffect(() => {\n    localStorage.setItem(\"workoutLog\", JSON.stringify(log));\n  }, [log]);\n\n  useEffect(() => {\n    localStorage.setItem(\"workoutHistory\", JSON.stringify(history));\n  }, [history]);\n  \n  useEffect(() => {\n  if (tabRefs.current[activeTab]) {\n    tabRefs.current[activeTab].scrollIntoView({ behavior: 'smooth', inline: 'center', block: 'nearest' });\n  }\n}, [activeTab]);\n\n  const handleChange = (dayIndex, exerciseIndex, field, value) => {\n    const updatedLog = [...log];\n    updatedLog[dayIndex].exercises[exerciseIndex][field] = value;\n    setLog(updatedLog);\n  };\n\n  const toggleWarmup = (dayIndex, warmup) => {\n    const key = `${dayIndex}-${warmup}`;\n    setCompletedWarmups((prev) => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const toggleExerciseDone = (dayIndex, exerciseIndex) => {\n    const updatedLog = [...log];\n    updatedLog[dayIndex].exercises[exerciseIndex].done = !updatedLog[dayIndex].exercises[exerciseIndex].done;\n    setLog(updatedLog);\n  };\n\n  const finishDay = (dayIndex) => {\n    const updatedLog = [...log];\n    const today = new Date().toLocaleDateString();\n    const finished = {\n      date: today,\n      day: log[dayIndex].day,\n      muscleGroup: log[dayIndex].muscleGroup,\n      exercises: log[dayIndex].exercises.map((ex) => ({\n        name: ex.name,\n        weight: ex.weight,\n        reps: ex.reps,\n        sets: ex.sets,\n        rpe: ex.rpe,\n        notes: ex.notes\n      }))\n    };\n    setHistory((prev) => [...prev, finished]);\n    updatedLog[dayIndex].exercises.forEach((ex) => {\n      if (ex.weight) ex.prevWeight = ex.weight;\n      ex.weight = \"\";\n      ex.rpe = \"\";\n      ex.rest = \"\";\n      ex.notes = \"\";\n      ex.done = false;\n    });\n    setLog(updatedLog);\n  };\n\n  const exportLog = () => {\n    const blob = new Blob([JSON.stringify(log, null, 2)], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = `workout-log-${new Date().toISOString().split(\"T\")[0]}.json`;\n    link.click();\n  };\n\n  const tabs = [...log.map((d) => d.day), \"History\"];\n\n  return (\n    <div className=\"min-h-screen w-full bg-[#242B2F] text-white\">\n      <div className=\"p-4 space-y-6 max-w-6xl mx-auto\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-white\">Workout Tracker</h1>\n          <button\n            onClick={exportLog}\n            className=\"border border-white text-white px-3 py-1 rounded text-sm bg-transparent hover:bg-white/10\">\n            Export Log\n          </button>\n        </div>\n\n        <div className={`bg-[#343E44] p-4 rounded-md ${showRPE ? \"\" : \"pb-2\"}`}>\n          <button\n            onClick={() => setShowRPE(!showRPE)}\n            className=\"text-left w-full text-lg font-semibold flex justify-between items-center text-white\">\n            RPE Scale (Rate of Perceived Exertion)\n            <span>{showRPE ? \"▲\" : \"▼\"}</span>\n          </button>\n          {showRPE && (\n            <ul className=\"text-sm space-y-1 mt-2 text-gray-300\">\n              {rpeScale.map((rpe) => (\n                <li key={rpe.value}>\n                  <strong>{rpe.value}</strong>: {rpe.description}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n\n        <div className=\"flex space-x-2 overflow-x-auto border-b pb-2 border-gray-700\">\n          {tabs.map((tab, index) => (\n            <button\n              key={tab}\n              ref={(el) => (tabRefs.current[index] = el)}\n              onClick={() => setActiveTab(index)}\n              className={`px-4 py-2 rounded-t-md text-base whitespace-nowrap ${\n                activeTab === index ? \"bg-[#C63663] text-white\" : \"bg-gray-700 text-gray-300\"\n              }`}>\n              {tab}\n            </button>\n          ))}\n        </div>\n\n        {activeTab === tabs.length - 1 ? (\n          <div className=\"bg-[#343E44] p-4 rounded-xl shadow-md\">\n            <h2 className=\"text-xl font-semibold mb-4 text-white\">Workout History</h2>\n            <input\n              type=\"text\"\n              className=\"border rounded p-2 w-full mb-4 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\"\n              placeholder=\"Search history by day, muscle group, exercise, or note...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n\n            {filteredHistory.length === 0 ? (\n              <p className=\"text-gray-400\">No matching workouts found.</p>\n            ) : (\n              filteredHistory.map((entry, i) => (\n                <div key={i} className=\"mb-4\">\n                  <h3 className=\"font-semibold text-[#C63663]\">\n                    {entry.date} – {entry.day} ({entry.muscleGroup})\n                  </h3>\n                  <ul className=\"text-sm ml-4 mt-1 list-disc text-gray-300\">\n                    {entry.exercises.map((ex, j) => (\n                      <li key={j}>\n                        <span className=\"font-medium text-white\">{ex.name}</span>: {ex.sets}x{ex.reps} @ {ex.weight} lbs\n                        (RPE {ex.rpe}) {ex.notes && `– ${ex.notes}`}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ))\n            )}\n          </div>\n        ) : null}\n\n        {log.map(\n          (day, dayIndex) =>\n            activeTab === dayIndex && (\n              <div key={day.day} className=\"bg-[#343E44] p-4 rounded-xl shadow-md space-y-4\">\n                <h2 className=\"text-xl font-semibold text-white\">\n                  {day.day} – {day.muscleGroup}\n                </h2>\n\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-md font-medium text-gray-300\">Warmups</h3>\n                  {day.warmups.map((warmup, i) => (\n                    <label key={i} className=\"flex items-center gap-2 text-sm text-gray-300\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"accent-[#C63663]\"\n                        checked={completedWarmups[`${dayIndex}-${warmup}`] || false}\n                        onChange={() => toggleWarmup(dayIndex, warmup)}\n                      />\n                      {warmup}\n                    </label>\n                  ))}\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-md font-medium text-gray-300 mt-4\">Main Exercises</h3>\n                  {day.exercises.map((exercise, exerciseIndex) => (\n                    <div key={exercise.name} className=\"p-3 border border-[#818C91] rounded-md space-y-2\">\n                      <div className=\"flex flex-col sm:flex-row sm:items-center sm:gap-4\">\n                        <label className=\"flex items-center gap-2 text-white\">\n                          <input\n                            type=\"checkbox\"\n                            checked={exercise.done || false}\n                            onChange={() => toggleExerciseDone(dayIndex, exerciseIndex)}\n                          />\n                          <span className=\"font-medium\">{exercise.name}</span>\n                        </label>\n                        <div className=\"text-sm text-gray-400\">\n                          Recommended: {exercise.sets} x {exercise.reps}\n                        </div>\n                        {exercise.prevWeight && (\n                          <div className=\"text-sm text-gray-400\">Previous Weight: {exercise.prevWeight} lbs</div>\n                        )}\n                      </div>\n\n                      {getPreviousBest(exercise) && (\n                        <div className=\"text-xs text-purple-400 font-medium\">\n                          💪 Previous Best: {getPreviousBest(exercise)}\n                        </div>\n                      )}\n\n                      <div className=\"grid grid-cols-2 sm:grid-cols-6 gap-2 text-sm\">\n                        <input\n                          className=\"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\"\n                          placeholder=\"Sets\"\n                          value={exercise.sets}\n                          onChange={(e) => handleChange(dayIndex, exerciseIndex, \"sets\", e.target.value)}\n                        />\n                        <input\n                          className=\"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\"\n                          placeholder=\"Reps\"\n                          value={exercise.reps}\n                          onChange={(e) => handleChange(dayIndex, exerciseIndex, \"reps\", e.target.value)}\n                        />\n                        <input\n                          className=\"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\"\n                          placeholder=\"Weight\"\n                          value={exercise.weight}\n                          onChange={(e) => handleChange(dayIndex, exerciseIndex, \"weight\", e.target.value)}\n                        />\n                        <select\n                          className=\"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white\"\n                          value={exercise.rpe || \"\"}\n                          onChange={(e) => handleChange(dayIndex, exerciseIndex, \"rpe\", e.target.value)}>\n                          <option value=\"\">RPE</option>\n                          {rpeScale.map((rpe) => (\n                            <option key={rpe.value} value={rpe.value}>\n                              {rpe.value}\n                            </option>\n                          ))}\n                        </select>\n                        <div className=\"flex flex-col\">\n                          <input\n                            className=\"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\"\n                            placeholder=\"Rest (sec)\"\n                            value={exercise.rest}\n                            onChange={(e) => handleChange(dayIndex, exerciseIndex, \"rest\", e.target.value)}\n                          />\n                          <span className=\"text-xs text-gray-400 mt-1\">\n                            Recommended: {getRecommendedRest(exercise.name)}\n                          </span>\n                        </div>\n                        <input\n                          className=\"border rounded p-1 h-9 text-base bg-transparent border-[#818C91] text-white placeholder-gray-400\"\n                          placeholder=\"Notes\"\n                          value={exercise.notes}\n                          onChange={(e) => handleChange(dayIndex, exerciseIndex, \"notes\", e.target.value)}\n                        />\n                      </div>\n\n                      {getSmartSuggestion(exercise) && (\n                        <div className=\"text-xs text-green-400 pt-1\">💡 Suggestion: {getSmartSuggestion(exercise)}</div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"flex justify-end\">\n                  <button\n                    onClick={() => finishDay(dayIndex)}\n                    className=\"text-sm bg-[#C63663] hover:bg-[#b03056] text-white px-3 py-1 rounded\">\n                    Finish Day\n                  </button>\n                </div>\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}