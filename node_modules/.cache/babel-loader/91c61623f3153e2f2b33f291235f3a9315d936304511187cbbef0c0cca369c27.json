{"ast":null,"code":"var _jsxFileName = \"/Users/areysen/workout-tracker/src/WorkoutLog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WorkoutLog() {\n  _s();\n  const [log, setLog] = useState([{\n    day: \"Monday\",\n    muscleGroup: \"Chest, Shoulders, Triceps\",\n    exercises: [{\n      name: \"Incline Dumbbell Press\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Flat Bench Press or Machine Press\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Seated Dumbbell Shoulder Press\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Lateral Raises\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Tricep Dips or Cable Pushdowns\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }]\n  }, {\n    day: \"Tuesday\",\n    muscleGroup: \"Legs & Core\",\n    exercises: [{\n      name: \"Barbell Back Squat or Leg Press\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Romanian Deadlifts\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Walking Lunges\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Calf Raises\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Weighted Ab Circuit\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }]\n  }, {\n    day: \"Wednesday\",\n    muscleGroup: \"Back & Biceps\",\n    exercises: [{\n      name: \"Barbell Row or Cable Row\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Lat Pulldown or Pull-Ups\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Face Pulls\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Barbell or Dumbbell Curls\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Hammer Curls\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }]\n  }, {\n    day: \"Friday\",\n    muscleGroup: \"Glutes, Hamstrings, Core\",\n    exercises: [{\n      name: \"Hip Thrusts\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Bulgarian Split Squats\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Hamstring Curls\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Glute Kickbacks or Cable RDLs\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }, {\n      name: \"Core Circuit\",\n      sets: \"\",\n      reps: \"\",\n      weight: \"\"\n    }]\n  }]);\n  const handleChange = (dayIndex, exerciseIndex, field, value) => {\n    const updatedLog = [...log];\n    updatedLog[dayIndex].exercises[exerciseIndex][field] = value;\n    setLog(updatedLog);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center text-blue-700\",\n      children: \"Workout Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), log.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-xl shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: [day.day, \" \\u2013 \", day.muscleGroup]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: day.exercises.map((exercise, exerciseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-4 gap-2 items-center border-b pb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"col-span-1 text-sm font-medium\",\n            children: exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border rounded p-1 text-sm\",\n            placeholder: \"Sets\",\n            value: exercise.sets,\n            onChange: e => handleChange(dayIndex, exerciseIndex, \"sets\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border rounded p-1 text-sm\",\n            placeholder: \"Reps\",\n            value: exercise.reps,\n            onChange: e => handleChange(dayIndex, exerciseIndex, \"reps\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border rounded p-1 text-sm\",\n            placeholder: \"Weight\",\n            value: exercise.weight,\n            onChange: e => handleChange(dayIndex, exerciseIndex, \"weight\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, exercise.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, day.day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkoutLog, \"X7YUI0+nSHbG6CqcKm1SdjBGY7k=\");\n_c = WorkoutLog;\nvar _c;\n$RefreshReg$(_c, \"WorkoutLog\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WorkoutLog","_s","log","setLog","day","muscleGroup","exercises","name","sets","reps","weight","handleChange","dayIndex","exerciseIndex","field","value","updatedLog","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/areysen/workout-tracker/src/WorkoutLog.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function WorkoutLog() {\n  const [log, setLog] = useState([\n    {\n      day: \"Monday\",\n      muscleGroup: \"Chest, Shoulders, Triceps\",\n      exercises: [\n        { name: \"Incline Dumbbell Press\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Flat Bench Press or Machine Press\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Seated Dumbbell Shoulder Press\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Lateral Raises\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Tricep Dips or Cable Pushdowns\", sets: \"\", reps: \"\", weight: \"\" }\n      ]\n    },\n    {\n      day: \"Tuesday\",\n      muscleGroup: \"Legs & Core\",\n      exercises: [\n        { name: \"Barbell Back Squat or Leg Press\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Romanian Deadlifts\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Walking Lunges\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Calf Raises\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Weighted Ab Circuit\", sets: \"\", reps: \"\", weight: \"\" }\n      ]\n    },\n    {\n      day: \"Wednesday\",\n      muscleGroup: \"Back & Biceps\",\n      exercises: [\n        { name: \"Barbell Row or Cable Row\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Lat Pulldown or Pull-Ups\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Face Pulls\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Barbell or Dumbbell Curls\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Hammer Curls\", sets: \"\", reps: \"\", weight: \"\" }\n      ]\n    },\n    {\n      day: \"Friday\",\n      muscleGroup: \"Glutes, Hamstrings, Core\",\n      exercises: [\n        { name: \"Hip Thrusts\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Bulgarian Split Squats\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Hamstring Curls\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Glute Kickbacks or Cable RDLs\", sets: \"\", reps: \"\", weight: \"\" },\n        { name: \"Core Circuit\", sets: \"\", reps: \"\", weight: \"\" }\n      ]\n    }\n  ]);\n\n  const handleChange = (dayIndex, exerciseIndex, field, value) => {\n    const updatedLog = [...log];\n    updatedLog[dayIndex].exercises[exerciseIndex][field] = value;\n    setLog(updatedLog);\n  };\n\n  return (\n    <div className=\"p-6 space-y-8\">\n      <h1 className=\"text-3xl font-bold text-center text-blue-700\">Workout Tracker</h1>\n      {log.map((day, dayIndex) => (\n        <div key={day.day} className=\"bg-white p-4 rounded-xl shadow-md\">\n          <h2 className=\"text-xl font-semibold mb-2\">{day.day} â€“ {day.muscleGroup}</h2>\n          <div className=\"space-y-4\">\n            {day.exercises.map((exercise, exerciseIndex) => (\n              <div\n                key={exercise.name}\n                className=\"grid grid-cols-4 gap-2 items-center border-b pb-2\"\n              >\n                <span className=\"col-span-1 text-sm font-medium\">{exercise.name}</span>\n                <input\n                  className=\"border rounded p-1 text-sm\"\n                  placeholder=\"Sets\"\n                  value={exercise.sets}\n                  onChange={(e) => handleChange(dayIndex, exerciseIndex, \"sets\", e.target.value)}\n                />\n                <input\n                  className=\"border rounded p-1 text-sm\"\n                  placeholder=\"Reps\"\n                  value={exercise.reps}\n                  onChange={(e) => handleChange(dayIndex, exerciseIndex, \"reps\", e.target.value)}\n                />\n                <input\n                  className=\"border rounded p-1 text-sm\"\n                  placeholder=\"Weight\"\n                  value={exercise.weight}\n                  onChange={(e) => handleChange(dayIndex, exerciseIndex, \"weight\", e.target.value)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}